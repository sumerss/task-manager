import { default as SymbolFactory } from '../../symbol/factory';
import { CompileError } from '../../../errors';
import { ElementDeclarationNode, SyntaxNode } from '../../../parser/nodes';
import { SyntaxToken } from '../../../lexer/tokens';
import { ElementValidator } from '../types';
import { default as SymbolTable } from '../../../analyzer/symbol/symbolTable';
export default class IndexesValidator implements ElementValidator {
    private declarationNode;
    private publicSymbolTable;
    private symbolFactory;
    constructor(declarationNode: ElementDeclarationNode & {
        type: SyntaxToken;
    }, publicSymbolTable: SymbolTable, symbolFactory: SymbolFactory);
    validate(): CompileError[];
    private validateContext;
    private validateName;
    private validateAlias;
    private validateSettingList;
    private validateBody;
    private validateFields;
    private validateFieldSetting;
    private validateSubElements;
}
export declare function isValidIndexesType(value?: SyntaxNode): boolean;
