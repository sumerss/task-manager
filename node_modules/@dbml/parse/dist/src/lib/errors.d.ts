import { SyntaxToken } from './lexer/tokens';
import { SyntaxNode } from './parser/nodes';
export declare enum CompileErrorCode {
    UNKNOWN_SYMBOL = 1000,
    UNEXPECTED_SYMBOL = 1001,
    UNEXPECTED_EOF = 1002,
    UNEXPECTED_NEWLINE = 1003,
    UNKNOWN_TOKEN = 1004,
    UNEXPECTED_TOKEN = 1005,
    UNEXPECTED_ELEMENT_DECLARATION = 1006,
    MISSING_SPACES = 1007,
    UNKNOWN_PREFIX_OP = 1008,
    INVALID_OPERAND = 1009,
    EMPTY_ATTRIBUTE_NAME = 1010,
    INVALID_ESCAPE_SEQUENCE = 1011,
    INVALID_NAME = 3000,
    UNEXPECTED_NAME = 3001,
    NAME_NOT_FOUND = 3002,
    DUPLICATE_NAME = 3003,
    INVALID_ALIAS = 3004,
    UNEXPECTED_ALIAS = 3005,
    UNEXPECTED_SETTINGS = 3006,
    INVALID_SETTINGS = 3007,
    UNEXPECTED_SIMPLE_BODY = 3008,
    UNEXPECTED_COMPLEX_BODY = 3009,
    INVALID_TABLE_CONTEXT = 3010,
    INVALID_TABLE_SETTING = 3011,
    DUPLICATE_TABLE_SETTING = 3012,
    INVALID_TABLEGROUP_CONTEXT = 3013,
    INVALID_TABLEGROUP_ELEMENT_NAME = 3014,
    DUPLICATE_TABLEGROUP_ELEMENT_NAME = 3015,
    DUPLICATE_TABLEGROUP_FIELD_NAME = 3016,
    INVALID_TABLEGROUP_FIELD = 3017,
    EMPTY_TABLE = 3018,
    INVALID_COLUMN = 3019,
    INVALID_COLUMN_NAME = 3020,
    UNKNOWN_COLUMN_SETTING = 3021,
    INVALID_COLUMN_TYPE = 3022,
    DUPLICATE_COLUMN_NAME = 3023,
    DUPLICATE_COLUMN_SETTING = 3024,
    INVALID_COLUMN_SETTING_VALUE = 3025,
    INVALID_ENUM_CONTEXT = 3026,
    INVALID_ENUM_ELEMENT_NAME = 3027,
    INVALID_ENUM_ELEMENT = 3028,
    DUPLICATE_ENUM_ELEMENT_NAME = 3029,
    UNKNOWN_ENUM_ELEMENT_SETTING = 3030,
    DUPLICATE_ENUM_ELEMENT_SETTING = 3031,
    INVALID_ENUM_ELEMENT_SETTING = 3032,
    EMPTY_ENUM = 3033,
    INVALID_REF_CONTEXT = 3034,
    UNKNOWN_REF_SETTING = 3035,
    DUPLICATE_REF_SETTING = 3036,
    INVALID_REF_SETTING_VALUE = 3037,
    INVALID_REF_RELATIONSHIP = 3038,
    INVALID_REF_FIELD = 3039,
    EMPTY_REF = 3040,
    REF_REDEFINED = 3041,
    INVALID_NOTE_CONTEXT = 3042,
    INVALID_NOTE = 3043,
    NOTE_REDEFINED = 3044,
    NOTE_CONTENT_REDEFINED = 3045,
    EMPTY_NOTE = 3046,
    INVALID_INDEXES_CONTEXT = 3047,
    INVALID_INDEXES_FIELD = 3048,
    INVALID_INDEX = 3049,
    UNKNOWN_INDEX_SETTING = 3050,
    DUPLICATE_INDEX_SETTING = 3051,
    UNEXPECTED_INDEX_SETTING_VALUE = 3052,
    INVALID_INDEX_SETTING_VALUE = 3053,
    INVALID_PROJECT_CONTEXT = 3054,
    PROJECT_REDEFINED = 3055,
    INVALID_PROJECT_FIELD = 3056,
    INVALID_CUSTOM_CONTEXT = 3057,
    INVALID_CUSTOM_ELEMENT_VALUE = 3058,
    INVALID_ELEMENT_IN_SIMPLE_BODY = 3059,
    INVALID_TABLE_PARTIAL_CONTEXT = 3060,
    INVALID_TABLE_PARTIAL_ELEMENT_NAME = 3061,
    INVALID_TABLE_PARTIAL_SETTING = 3062,
    DUPLICATE_TABLE_PARTIAL_ELEMENT_NAME = 3063,
    DUPLICATE_TABLE_PARTIAL_SETTING = 3064,
    INVALID_TABLE_PARTIAL_INJECTION = 3065,
    INVALID_TABLE_PARTIAL_INJECTION_OP = 3066,
    INVALID_TABLE_PARTIAL_INJECTION_NAME = 3067,
    DUPLICATE_TABLE_PARTIAL_INJECTION_NAME = 3068,
    BINDING_ERROR = 4000,
    UNSUPPORTED = 5000,
    CIRCULAR_REF = 5001,
    SAME_ENDPOINT = 5002,
    UNEQUAL_FIELDS_BINARY_REF = 5003,
    CONFLICTING_SETTING = 5004,
    TABLE_REAPPEAR_IN_TABLEGROUP = 5005
}
export declare class CompileError extends Error {
    code: Readonly<CompileErrorCode>;
    diagnostic: Readonly<string>;
    nodeOrToken: Readonly<SyntaxNode | SyntaxToken | readonly (SyntaxNode | SyntaxToken)[]>;
    start: Readonly<number>;
    end: Readonly<number>;
    constructor(code: number, message: string, nodeOrToken: SyntaxNode | SyntaxToken);
}
